@using IntroMonitoringEngineering.Models
@using Microsoft.VisualBasic
@model List<Detail>

@{
    var categories = ViewBag.Categories as List<Category>;
    var selectedCategory = ViewBag.SelectedCategory as Category;
    var categoryInformation = ViewBag.Information as List<Detail>;
    var imgs = ViewBag.Images as List<ImageUrl>;
    
}




<div class="container">




    <div class="row ">
        <div class="col-3 category-container m-auto @((selectedCategory == null) ? "d-none" : "")" id="categoryContainer">

            @if (categories != null && categories.Any())
            {
                foreach (var category in categories)
                {

                    <div class="d-flex position-relative">

                        <div class="nav-item">

                            <a class="nav-link text-light" href="@Url.Action("Index", "Context", new { categoryId = category.Id })">
                                @category.Title
                            </a>

                        </div>

                        <div class="d-flex position-absolute category-icon">
                            @if (User.IsInRole("Admin"))
                            {
                                <a class="nav-link text-dark" href="@Url.Action("Edit", "Category", new { id = category.Id })" class="btn btn-warning">
                                    <i class="fa-regular fa-pen-to-square edit"></i>
                                </a>

                                <a class="nav-link text-dark" href="@Url.Action("Delete", "Category", new { id = category.Id })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this category?');">
                                    <i class="fa-solid fa-trash-can remove"></i>
                                </a>
                            }
                        </div>

                    </div>
                }
            }
            else
            {
                <p class="text-danger">No categories available.</p>
            }

        </div>




        <div class="col position-relative">
            @if (categoryInformation != null && categoryInformation.Any(info => info.Image != null && info.Image.Any()))
            {
                <div class="d-flex justify-content-center description-images">
                    @foreach (var info in categoryInformation)
                    {
                        if (info.Image != null && info.Image.Any())
                        {
                            foreach (var image in info.Image)
                            {
                                <div>
                                    <img class="content-img" src="@Url.Content(image.Url)" alt="@image.AltText" width="100" height="100" style="margin: 5px;" onmouseover="toggleImageSize(this)" onmouseout="resetImageSize(this)" />

                                    <div>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <a class="text-decoration-none" href="@Url.Action("EditImage", "Image", new { id = image.Id })">
                                                <i class="fa-regular fa-pen-to-square edit me-3"></i>
                                            </a>

                                            <a class="text-decoration-none" href="@Url.Action("DeleteImage", "Image", new { id = image.Id, categoryId = selectedCategory.Id })" onclick="return confirm('Are you sure you want to delete this image?');">
                                                <i class="fa-solid fa-trash-can remove"></i>
                                            </a>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            }


            @if (selectedCategory != null && categoryInformation != null && categoryInformation.Any())
            {
                <div class="row description-container m-3">
                    @foreach (var info in categoryInformation)
                    {
                        @if (info.Image != null && info.Image.Any())
                        {
                            foreach (var image in info.Image)
                            {
                                @if (!string.IsNullOrWhiteSpace(info.Description))
                                {
                                    <div class="description-text">
                                        <p class="text-light">
                                            @info.Description
                                  
                                        </p>
                                    </div>

                                    @if (User.IsInRole("Admin"))
                                    {
                                       
                                        <div class="d-flex">
                                            <a class="me-3" asp-controller="Detail" asp-action="EditDescription" asp-route-id="@info.Id">
                                                <i class="fa-regular fa-pen-to-square edit ms-3 me-3"></i>
                                            </a>
                                            <a href="@Url.Action("DeleteInformation", "Detail", new { informationId = info.Id, categoryId = selectedCategory.Id })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this information?');">
                                                <i class="fa-solid fa-trash"></i>
                                            </a>
                                        </div>
                                    }


                                }
                            }
                        }
                        else
                        {
                            <span class="text-danger">No images available.</span>
                        }

                      
                    }
                </div>

            }
           


        </div>

    </div>

   

</div>









<script>
        document.addEventListener('DOMContentLoaded', function () {
      function toggleContainer() {
        const categoryContainer = document.querySelector('.category-container');

        if (!categoryContainer) {
          console.error("No element with class '.category-container' found.");
          return;
        }

        if (window.innerWidth >= 700) {
    
          if (categoryContainer.style.display === 'none') {
            categoryContainer.style.display = 'block';
          }
        } else {
   
          categoryContainer.style.display = 'none';
        }
      }


      toggleContainer();


      window.addEventListener('resize', toggleContainer);
    });

</script>




